#include<stdio.h>
#include<unistd.h>
#include<sys/types.h>

int main(){

pid_t pid1, pid2, pid3, pid4, pid6, pid7, pid8;
printf("Parent[A] of all: %d\n",getpid());

pid1 = fork();

if(pid1 == 0){   // Child Process, lets say B.
    printf("Child[B] with id: %d and its Parent id: %d \n", getpid(), getppid());
}
else{
pid7 =fork();
if(pid7 == 0){   // Child Process, lets say C.
    printf("Child[C] with id: %d and its Parent id: %d \n", getpid(), getppid());
    pid2 = fork();
      if(pid2 == 0){ // A child process. Lets say E.
        printf("Child[E] with id: %d and its Parent id: %d \n", getpid(),getppid());}
else{
    // A child process. Lets say F.
    pid4 = fork();
    if(pid4 == 0){ 
        printf("Child[F] with id: %d and its Parent id: %d \n", getpid(),getppid());
        pid6=fork();
        if(pid6 == 0)
        { printf("Child[G] with id: %d and its Parent id: %d \n", getpid(),getppid());}
  }
}}
else{
pid8 = fork();
if(pid8 == 0){
   pid3 = fork();
  if(pid3 == 0){ // A child process. Lets say D.
    printf("Child[D] with id: %d and its Parent id: %d \n", getpid(),getppid());}}}}}
